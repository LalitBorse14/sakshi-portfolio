{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LALIT BORSE\\\\Desktop\\\\resume\\\\Portfolio\\\\src\\\\components\\\\Contact.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\"\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const res = await fetch(\"https://fwhbyb2lzl.execute-api.ap-south-1.amazonaws.com/prod\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    });\n    const data = await res.json();\n    if (res.status === 200) {\n      alert(\"Message sent successfully!\");\n    } else {\n      alert(\"Something went wrong: \" + data.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"contact\",\n    className: \"py-20 px-6 bg-black text-white\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold text-red-500 mb-6 text-center\",\n        children: \"Contact Me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Your Name\",\n          onChange: handleChange,\n          className: \"w-full p-2 rounded text-black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your Email\",\n          onChange: handleChange,\n          className: \"w-full p-2 rounded text-black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"message\",\n          placeholder: \"Your Message\",\n          rows: \"4\",\n          onChange: handleChange,\n          className: \"w-full p-2 rounded text-black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-red-600 hover:bg-red-700 px-4 py-2 rounded\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Contact, \"f4Tlg6T5Vbnq9ClqIc1RiRHgxSY=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Contact","_s","formData","setFormData","name","email","message","handleChange","e","target","value","handleSubmit","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","status","alert","error","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","rows","_c","$RefreshReg$"],"sources":["C:/Users/LALIT BORSE/Desktop/resume/Portfolio/src/components/Contact.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Contact = () => {\r\n  const [formData, setFormData] = useState({ name: \"\", email: \"\", message: \"\" });\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const res = await fetch(\"https://fwhbyb2lzl.execute-api.ap-south-1.amazonaws.com/prod\", \r\n    {\r\n     method: \"POST\",\r\n     headers: \r\n     {\r\n      \"Content-Type\": \"application/json\",\r\n     },\r\n     body: JSON.stringify(formData),\r\n    });\r\n\r\n  const data = await res.json();\r\n    if (res.status === 200) {\r\n    alert(\"Message sent successfully!\");\r\n    } else {\r\n    alert(\"Something went wrong: \" + data.error);\r\n    }\r\n    };\r\n\r\n\r\n  return (\r\n    <section id=\"contact\" className=\"py-20 px-6 bg-black text-white\">\r\n      <div className=\"max-w-xl mx-auto\">\r\n        <h2 className=\"text-3xl font-bold text-red-500 mb-6 text-center\">Contact Me</h2>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <input type=\"text\" name=\"name\" placeholder=\"Your Name\" onChange={handleChange} className=\"w-full p-2 rounded text-black\" />\r\n          <input type=\"email\" name=\"email\" placeholder=\"Your Email\" onChange={handleChange} className=\"w-full p-2 rounded text-black\" />\r\n          <textarea name=\"message\" placeholder=\"Your Message\" rows=\"4\" onChange={handleChange} className=\"w-full p-2 rounded text-black\" />\r\n          <button type=\"submit\" className=\"bg-red-600 hover:bg-red-700 px-4 py-2 rounded\">Send</button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}